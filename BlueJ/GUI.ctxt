#BlueJ class context
comment0.target=GUI
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\r\n\r\n\ @param\ args\r\n
comment10.params=event
comment10.target=void\ handle(javafx.event.ActionEvent)
comment11.params=
comment11.target=javafx.scene.Node\ createStatusBar()
comment11.text=\r\n\ issa\ new\ node\ for\ the\ status\ bar\r\n
comment12.params=
comment12.target=javafx.collections.ObservableList\ getLiteratureList()
comment12.text=\r\n\ Returns\ an\ ObservableList\ holding\ the\ literatures\ to\ display.\r\n\r\n\ @return\ an\ ObservableList\ holding\ the\ literatures\ to\ display.\r\n
comment13.params=
comment13.target=void\ updateObservableList()
comment13.text=\r\n\ Updates\ the\ ObservableArray\ wrapper\ with\ the\ current\ content\ in\ the\r\n\ Literature\ register.\ Call\ this\ method\ whenever\ changes\ are\ made\ to\ the\r\n\ underlying\ LiteratureRegister.\r\n
comment14.params=
comment14.target=javafx.scene.Node\ createLeftBar()
comment14.text=\r\n\ issa\ new\ node\ for\ buttons\ on\ the\ left\ pane\r\n
comment15.params=event
comment15.target=void\ handle(javafx.event.ActionEvent)
comment16.params=event
comment16.target=void\ handle(javafx.event.ActionEvent)
comment17.params=event
comment17.target=void\ handle(javafx.event.ActionEvent)
comment18.params=event
comment18.target=void\ handle(javafx.event.ActionEvent)
comment19.params=event
comment19.target=void\ handle(javafx.event.ActionEvent)
comment2.params=
comment2.target=void\ init()
comment20.params=
comment20.target=void\ fillRegisterWithDummyData()
comment20.text=\r\n\r\n
comment21.params=
comment21.target=void\ doAddNewspaper()
comment21.text=\r\n\ Display\ the\ input\ dialog\ to\ get\ create\ a\ new\ Newspaper.\r\n
comment22.params=
comment22.target=void\ doDeleteLiterature()
comment22.text=\r\n\ Deletes\ the\ literature\ selected\ in\ the\ table.\ If\ no\ literature\ is\r\n\ selected,\ nothing\ is\ deleted,\ and\ the\ user\ is\ informed\ that\ he/she\ must\r\n\ select\ which\ literature\ to\ delete.\r\n
comment23.params=
comment23.target=void\ doEditLiterature()
comment23.text=\r\n\ Edit\ the\ selected\ item.\r\n
comment24.params=
comment24.target=void\ doShowDetails()
comment24.text=\r\n\ Show\ details\ of\ the\ selected\ item.\r\n
comment25.params=
comment25.target=void\ showPleaseSelectItemDialog()
comment26.params=
comment26.target=boolean\ showDeleteConfirmationDialog()
comment27.params=
comment27.target=void\ showCantEnterEmpty()
comment28.params=
comment28.target=void\ handleAddLiterature()
comment28.text=\ what\ does\ the\ buttons\ do?\r\n\ \ Thats\ defined\ here\r\n
comment29.params=
comment29.target=void\ handleFileOpen()
comment3.params=primaryStage
comment3.target=void\ start(javafx.stage.Stage)
comment30.params=
comment30.target=void\ handleExit()
comment31.params=
comment31.target=void\ handleFilePrint()
comment32.params=
comment32.target=void\ handleFileSave()
comment33.params=
comment33.target=void\ handleFileHelp()
comment34.params=
comment34.target=void\ handleFileDel()
comment4.params=
comment4.target=void\ stop()
comment4.text=\r\n\ The\ stop()\ method\ is\ being\ called\ by\ the\ JavaFX-platform\ when\ the\r\n\ platform\ stops,\ are\ being\ terminated.\ This\ would\ typically\ happen\ as\ a\r\n\ result\ of\ the\ last\ open\ window\ being\ closed.\ Override\ this\ method\ to\ make\r\n\ sure\ that\ the\ application\ is\ terminated.\r\n
comment5.params=
comment5.target=javafx.scene.control.MenuBar\ createMenus()
comment6.params=actionEvent
comment6.target=void\ handle(javafx.event.ActionEvent)
comment7.params=actionEvent
comment7.target=void\ handle(javafx.event.ActionEvent)
comment8.params=
comment8.target=javafx.scene.Node\ createCentreContent()
comment8.text=\r\n\ The\ centre\ content\ shows\ a\ table\ of\ literature\r\n\ \r\n\ @return\ the\ node\ to\ be\ placed\ in\ the\ cneter\ of\ the\ BorderPane\r\n
comment9.params=event
comment9.target=void\ handle(javafx.event.ActionEvent)
numComments=35
